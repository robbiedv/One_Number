{"version":3,"sources":["componants/main.js","componants/skaters.js","componants/goalies.js","App.js","serviceWorker.js","index.js"],"names":["Main","rightW","leftW","center","defense","goalies","callbackArr","sortPlayers","a","b","index","oneNumber","skaterSpread","position","one","sort","twenty","spread","i","length","push","console","log","player","skatersJSON","stats","parseInt","GP","G","A","P","PM","PPG","PPA","S","BLK","H","FW","pos","Pos","Math","round","addSkaterStats","goaliesJSON","GS","W","GA","SV","SH","addGoalieStats","className","id","to","type","Skaters","displayRankings","row","document","getElementById","insertRow","rank","insertCell","num","innerHTML","onClick","style","display","setTimeout","Goalies","sortGoalies","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8c2b0fd5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./../css/App.css\";\nimport skatersJSON from \"./../data/skaters.json\";\nimport goaliesJSON from \"./../data/goalies.json\";\nimport { Link } from \"react-router-dom\";\n\nfunction Main() {\n  /*******************\n   *** SORTING DATA ***\n   *******************/\n  let rightW = [];\n  let leftW = [];\n  let center = [];\n  let defense = [];\n  let goalies = [];\n\n  /***\n  Adding each players stats together and pushing\n  to new array based on player position\n  ***/\n\n  function addSkaterStats() {\n    for (let player in skatersJSON) {\n      let stats = 0;\n      stats += parseInt(skatersJSON[player].GP);\n      stats += parseInt(skatersJSON[player].G);\n      stats += parseInt(skatersJSON[player].A);\n      stats += parseInt(skatersJSON[player].P);\n      stats += parseInt(skatersJSON[player].PM * 0.5);\n      stats += parseInt(skatersJSON[player].PPG * 5);\n      stats += parseInt(skatersJSON[player].PPA * 5);\n      stats += parseInt(skatersJSON[player].S);\n      stats += parseInt(skatersJSON[player].BLK);\n      stats += parseInt(skatersJSON[player].H * 0.5);\n      stats += parseInt(skatersJSON[player].FW) * 0.05;\n      let pos = skatersJSON[player].Pos;\n      stats = Math.round(stats / 10);\n      if (pos === \"RW\") {\n        rightW.push([player, pos, stats]);\n      } else if (pos === \"LW\") {\n        leftW.push([player, pos, stats]);\n      } else if (pos === \"C\" || pos === \"F\") {\n        center.push([player, pos, stats]);\n      } else if (pos === \"D\") {\n        defense.push([player, pos, stats]);\n      }\n    }\n  }\n\n  function addGoalieStats() {\n    for (let player in goaliesJSON) {\n      let stats = 0;\n      stats += parseInt(goaliesJSON[player].GS);\n      stats += parseInt(goaliesJSON[player].W);\n      stats += parseInt(goaliesJSON[player].GA);\n      stats += parseInt(goaliesJSON[player].SV);\n      stats += parseInt(goaliesJSON[player].SV);\n      stats += parseInt(goaliesJSON[player].SH * 50);\n      let pos = goaliesJSON[player].Pos;\n      stats = stats / 50;\n      goalies.push([player, pos, stats]);\n    }\n  }\n\n  /***\n  Callback function for sorting players based\n  on number of total stats in descending oder\n  ***/\n\n  let callbackArr = [1, 4];\n\n  function sortPlayers(a, b) {\n    for (let index in callbackArr) {\n      if (a[2] > b[2]) {\n        return -1;\n      } else if (b[2] > a[2]) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n  }\n\n  let oneNumber = [];\n\n  function skaterSpread(position) {\n    let one = position.sort(sortPlayers)[0][2];\n    let twenty = position.sort(sortPlayers)[20][2];\n    let spread = one - twenty;\n\n    for (let i = 0; i < position.length; i++) {\n      position[i][2] += spread;\n      oneNumber.push(position[i]);\n    }\n\n    console.log(one, twenty, spread);\n  }\n\n  function allSkaterSpread() {\n    skaterSpread(leftW);\n    skaterSpread(rightW);\n    skaterSpread(center);\n    skaterSpread(defense);\n  }\n\n  addSkaterStats();\n  addGoalieStats();\n  allSkaterSpread();\n\n  /****************\n   *** COMPONANT ***\n   ****************/\n  // function clickHandler() {\n  //   console.log(oneNumber.sort(sortPlayers));\n  // }\n\n  return (\n    <div className=\"main\">\n      <div className=\"grid-container\">\n        <h1 className=\"main-title\">\n          One Number\n          <br />\n          <span className=\"main-tag\">Draft Your Fantasy Hockey Team</span>\n        </h1>\n        <div id=\"startButtonDiv\">\n          <div id=\"goalieDiv\">\n            <Link to=\"/goalies\">\n              <button className=\"startButton\" type=\"submit\">\n                Goalies\n              </button>\n            </Link>\n          </div>\n          <div id=\"skaterDiv\">\n            <Link to=\"/skaters\">\n              <button className=\"startButton\" type=\"submit\">\n                Skaters\n              </button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\nimport \"./../css/App.css\";\nimport skatersJSON from \"./../data/skaters.json\";\n\nfunction Skaters() {\n  /*******************\n   *** SORTING DATA ***\n   *******************/\n  let rightW = [];\n  let leftW = [];\n  let center = [];\n  let defense = [];\n\n  /***\n    Adding each players stats together and pushing\n    to new array based on player position\n    ***/\n\n  function addSkaterStats() {\n    for (let player in skatersJSON) {\n      let stats = 0;\n      stats += parseInt(skatersJSON[player].GP);\n      stats += parseInt(skatersJSON[player].G);\n      stats += parseInt(skatersJSON[player].A);\n      stats += parseInt(skatersJSON[player].P);\n      stats += parseInt(skatersJSON[player].PM * 0.5);\n      stats += parseInt(skatersJSON[player].PPG * 5);\n      stats += parseInt(skatersJSON[player].PPA * 5);\n      stats += parseInt(skatersJSON[player].S);\n      stats += parseInt(skatersJSON[player].BLK);\n      stats += parseInt(skatersJSON[player].H * 0.5);\n      stats += parseInt(skatersJSON[player].FW) * 0.05;\n      let pos = skatersJSON[player].Pos;\n      stats = Math.round(stats / 10);\n      if (pos === \"RW\") {\n        rightW.push([player, pos, stats]);\n      } else if (pos === \"LW\") {\n        leftW.push([player, pos, stats]);\n      } else if (pos === \"C\" || pos === \"F\") {\n        center.push([player, pos, stats]);\n      } else if (pos === \"D\") {\n        defense.push([player, pos, stats]);\n      }\n    }\n  }\n\n  /***\n    Callback function for sorting players based\n    on number of total stats in descending oder\n    ***/\n  let callbackArr = [1, 4];\n\n  function sortPlayers(a, b) {\n    for (let index in callbackArr) {\n      if (a[2] > b[2]) {\n        return -1;\n      } else if (b[2] > a[2]) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n  }\n\n  let oneNumber = [];\n\n  function skaterSpread(position) {\n    let one = position.sort(sortPlayers)[0][2];\n    let twenty = position.sort(sortPlayers)[20][2];\n    let spread = one - twenty;\n\n    for (let i = 0; i < position.length; i++) {\n      position[i][2] += spread;\n      oneNumber.push(position[i]);\n    }\n  }\n\n  function allSkaterSpread() {\n    skaterSpread(leftW);\n    skaterSpread(rightW);\n    skaterSpread(center);\n    skaterSpread(defense);\n  }\n\n  /***********************\n   *** DISPLAY RANKINGS ***\n   ***********************/\n\n  function displayRankings() {\n    for (let i = 0; i < 500; i++) {\n      let table = document.getElementById(\"skaterTable\");\n      let row = table.insertRow(i);\n      let rank = row.insertCell(0);\n      let player = row.insertCell(1);\n      let pos = row.insertCell(2);\n      let num = row.insertCell(3);\n\n      rank.innerHTML = i + 1;\n      player.innerHTML = oneNumber.sort(sortPlayers)[i][0];\n      pos.innerHTML = oneNumber.sort(sortPlayers)[i][1];\n      num.innerHTML = oneNumber.sort(sortPlayers)[i][2];\n    }\n  }\n\n  /****************\n   *** COMPONANT ***\n   ****************/\n\n  function clickHandler() {\n    let x = document.getElementById(\"skaterButton\");\n    x.style.display = \"none\";\n    addSkaterStats();\n    allSkaterSpread();\n    setTimeout(displayRankings, 10)\n  }\n\n  return (\n    <div className=\"skaters\">\n      <div className=\"grid-container\">\n        <h1 className=\"main-title\">Skaters</h1>\n        <button\n          id=\"skaterButton\"\n          className=\"statButton\"\n          type=\"submit\"\n          onClick={clickHandler}\n        >\n          Get Draft Rankings\n        </button>\n        <table id=\"skaterTable\"></table>\n      </div>\n    </div>\n  );\n}\n\nexport default Skaters;\n","import React from \"react\";\nimport \"./../css/App.css\";\nimport skatersJSON from \"./../data/skaters.json\";\nimport goaliesJSON from \"./../data/goalies.json\";\n\nfunction Goalies() {\n  /*******************\n   *** SORTING DATA ***\n   *******************/\n  let goalies = [];\n\n  /***\n    Adding each goalies stats together and pushing\n    to new array based on player position\n    ***/\n  function addGoalieStats() {\n    for (let player in goaliesJSON) {\n      let stats = 0;\n      stats += parseInt(goaliesJSON[player].GS);\n      stats += parseInt(goaliesJSON[player].W);\n      stats += parseInt(goaliesJSON[player].GA);\n      stats += parseInt(goaliesJSON[player].SV);\n      stats += parseInt(goaliesJSON[player].SV);\n      stats += parseInt(goaliesJSON[player].SH * 50);\n      let pos = goaliesJSON[player].Pos;\n      stats = Math.round(stats / 35);\n      goalies.push([player, pos, stats]);\n    }\n  }\n\n  /***\n    Callback function for sorting players based\n    on number of total stats in descending oder\n    ***/\n  let callbackArr = [1, 4];\n\n  function sortGoalies(a, b) {\n    for (let index in callbackArr) {\n      if (a[2] > b[2]) {\n        return -1;\n      } else if (b[2] > a[2]) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n  }\n\n  function displayRankings() {\n    for (let i = 0; i < goalies.length; i++) {\n      let table = document.getElementById(\"goalieTable\");\n      let row = table.insertRow(i);\n      let rank = row.insertCell(0);\n      let player = row.insertCell(1);\n      let num = row.insertCell(2);\n\n      rank.innerHTML = i + 1;\n      player.innerHTML = goalies.sort(sortGoalies)[i][0];\n      num.innerHTML = goalies.sort(sortGoalies)[i][2];\n    }\n  }\n\n  /****************\n   *** COMPONANT ***\n   ****************/\n  function clickHandler() {\n    let x = document.getElementById(\"goalieButton\");\n    x.style.display = \"none\";\n    addGoalieStats();\n    setTimeout(displayRankings, 2000)\n  }\n  return (\n    <div className=\"goalies\">\n      <div className=\"grid-container\">\n        <h1 className=\"main-title\">Goalies</h1>\n        <button\n          id=\"goalieButton\"\n          className=\"statButton\"\n          type=\"submit\"\n          onClick={clickHandler}\n        >\n          Get Draft Rankings\n        </button>\n        <table id=\"goalieTable\"></table>\n      </div>\n    </div>\n  );\n}\n\nexport default Goalies;\n","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport './css/App.css';\nimport './componants/main.js';\nimport 'normalize.css';\nimport Main from './componants/main';\nimport Skaters from './componants/skaters.js';\nimport Goalies from './componants/goalies.js';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path='/' exact component={Main}/>\n        <Route path='/skaters' component={Skaters}/>\n        <Route path='/goalies' component={Goalies}/>\n      </Switch>\n  </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<React.StrictMode>\n  <App/>\n</React.StrictMode>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}