{"ast":null,"code":"var _jsxFileName = \"/home/robbie/Documents/Code/One_Number/one-number/src/componants/skaters.js\";\nimport React from \"react\";\nimport \"./../css/App.css\";\nimport skatersJSON from \"./../data/skaters.json\";\n\nfunction Skaters() {\n  /*******************\n   *** SORTING DATA ***\n   *******************/\n  let rightW = [];\n  let leftW = [];\n  let center = [];\n  let defense = [];\n  /***\n    Adding each players stats together and pushing\n    to new array based on player position\n    ***/\n\n  function addSkaterStats() {\n    for (let player in skatersJSON) {\n      let stats = 0;\n      stats += parseInt(skatersJSON[player].GP);\n      stats += parseInt(skatersJSON[player].G);\n      stats += parseInt(skatersJSON[player].A);\n      stats += parseInt(skatersJSON[player].P);\n      stats += parseInt(skatersJSON[player].PM * 0.5);\n      stats += parseInt(skatersJSON[player].PPG * 5);\n      stats += parseInt(skatersJSON[player].PPA * 5);\n      stats += parseInt(skatersJSON[player].S);\n      stats += parseInt(skatersJSON[player].BLK);\n      stats += parseInt(skatersJSON[player].H * 0.5);\n      stats += parseInt(skatersJSON[player].FW) * 0.05;\n      let pos = skatersJSON[player].Pos;\n      stats = Math.round(stats / 10);\n\n      if (pos === \"RW\") {\n        rightW.push([player, pos, stats]);\n      } else if (pos === \"LW\") {\n        leftW.push([player, pos, stats]);\n      } else if (pos === \"C\" || pos === \"F\") {\n        center.push([player, pos, stats]);\n      } else if (pos === \"D\") {\n        defense.push([player, pos, stats]);\n      }\n    }\n  }\n  /***\n    Callback function for sorting players based\n    on number of total stats in descending oder\n    ***/\n\n\n  let callbackArr = [1, 4];\n\n  function sortPlayers(a, b) {\n    for (let index in callbackArr) {\n      if (a[2] > b[2]) {\n        return -1;\n      } else if (b[2] > a[2]) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n  }\n\n  let oneNumber = [];\n\n  function skaterSpread(position) {\n    let one = position.sort(sortPlayers)[0][2];\n    let twenty = position.sort(sortPlayers)[20][2];\n    let spread = one - twenty;\n\n    for (let i = 0; i < position.length; i++) {\n      position[i][2] += spread;\n      oneNumber.push(position[i]);\n    }\n  }\n\n  function allSkaterSpread() {\n    skaterSpread(leftW);\n    skaterSpread(rightW);\n    skaterSpread(center);\n    skaterSpread(defense);\n  }\n  /***********************\n   *** DISPLAY RANKINGS ***\n   ***********************/\n\n\n  function displayRankings() {\n    //for top 500 players\n    for (let i = 0; i < 501; i++) {\n      let table = document.getElementById(\"statTable\");\n      let row = table.insertRow(i);\n      let rank = row.insertCell(0);\n      let player = row.insertCell(1);\n      let pos = row.insertCell(2);\n      let num = row.insertCell(3);\n\n      if (i === 0) {\n        rank.innerHTML = \"Rank\";\n        player.innerHTML = \"Player\";\n        pos.innerHTML = \"Position\";\n        num.innerHTML = \"Overall\";\n      } else {\n        rank.innerHTML = i + 1;\n        player.innerHTML = oneNumber.sort(sortPlayers)[i][0];\n        pos.innerHTML = oneNumber.sort(sortPlayers)[i][1];\n        num.innerHTML = oneNumber.sort(sortPlayers)[i][2];\n      }\n    }\n  }\n  /****************\n   *** COMPONANT ***\n   ****************/\n\n\n  function hide() {\n    let x = document.getElementById(\"skaterButton\");\n    x.style.display = \"none\";\n  }\n\n  function clickHandler() {\n    hide();\n    addSkaterStats();\n    allSkaterSpread();\n    displayRankings();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"skaters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"main-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, \"Skaters\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"skaterButton\",\n    className: \"statButton\",\n    type: \"submit\",\n    onClick: clickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, \"Get Draft Rankings\"), /*#__PURE__*/React.createElement(\"table\", {\n    id: \"statTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Skaters;","map":{"version":3,"sources":["/home/robbie/Documents/Code/One_Number/one-number/src/componants/skaters.js"],"names":["React","skatersJSON","Skaters","rightW","leftW","center","defense","addSkaterStats","player","stats","parseInt","GP","G","A","P","PM","PPG","PPA","S","BLK","H","FW","pos","Pos","Math","round","push","callbackArr","sortPlayers","a","b","index","oneNumber","skaterSpread","position","one","sort","twenty","spread","i","length","allSkaterSpread","displayRankings","table","document","getElementById","row","insertRow","rank","insertCell","num","innerHTML","hide","x","style","display","clickHandler"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./../css/App.css\";\nimport skatersJSON from \"./../data/skaters.json\";\n\nfunction Skaters() {\n  /*******************\n   *** SORTING DATA ***\n   *******************/\n  let rightW = [];\n  let leftW = [];\n  let center = [];\n  let defense = [];\n\n  /***\n    Adding each players stats together and pushing\n    to new array based on player position\n    ***/\n\n  function addSkaterStats() {\n    for (let player in skatersJSON) {\n      let stats = 0;\n      stats += parseInt(skatersJSON[player].GP);\n      stats += parseInt(skatersJSON[player].G);\n      stats += parseInt(skatersJSON[player].A);\n      stats += parseInt(skatersJSON[player].P);\n      stats += parseInt(skatersJSON[player].PM * 0.5);\n      stats += parseInt(skatersJSON[player].PPG * 5);\n      stats += parseInt(skatersJSON[player].PPA * 5);\n      stats += parseInt(skatersJSON[player].S);\n      stats += parseInt(skatersJSON[player].BLK);\n      stats += parseInt(skatersJSON[player].H * 0.5);\n      stats += parseInt(skatersJSON[player].FW) * 0.05;\n      let pos = skatersJSON[player].Pos;\n      stats = Math.round(stats / 10);\n      if (pos === \"RW\") {\n        rightW.push([player, pos, stats]);\n      } else if (pos === \"LW\") {\n        leftW.push([player, pos, stats]);\n      } else if (pos === \"C\" || pos === \"F\") {\n        center.push([player, pos, stats]);\n      } else if (pos === \"D\") {\n        defense.push([player, pos, stats]);\n      }\n    }\n  }\n\n  /***\n    Callback function for sorting players based\n    on number of total stats in descending oder\n    ***/\n  let callbackArr = [1, 4];\n\n  function sortPlayers(a, b) {\n    for (let index in callbackArr) {\n      if (a[2] > b[2]) {\n        return -1;\n      } else if (b[2] > a[2]) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n  }\n\n  let oneNumber = [];\n\n  function skaterSpread(position) {\n    let one = position.sort(sortPlayers)[0][2];\n    let twenty = position.sort(sortPlayers)[20][2];\n    let spread = one - twenty;\n\n    for (let i = 0; i < position.length; i++) {\n      position[i][2] += spread;\n      oneNumber.push(position[i]);\n    }\n  }\n\n  function allSkaterSpread() {\n    skaterSpread(leftW);\n    skaterSpread(rightW);\n    skaterSpread(center);\n    skaterSpread(defense);\n  }\n\n  /***********************\n   *** DISPLAY RANKINGS ***\n   ***********************/\n\n  function displayRankings() {\n    //for top 500 players\n    for (let i = 0; i < 501; i++) {\n      let table = document.getElementById(\"statTable\");\n      let row = table.insertRow(i);\n      let rank = row.insertCell(0);\n      let player = row.insertCell(1);\n      let pos = row.insertCell(2);\n      let num = row.insertCell(3);\n\n      if (i === 0) {\n        rank.innerHTML = \"Rank\";\n        player.innerHTML = \"Player\";\n        pos.innerHTML = \"Position\";\n        num.innerHTML = \"Overall\";\n      } else {\n        rank.innerHTML = i + 1;\n        player.innerHTML = oneNumber.sort(sortPlayers)[i][0];\n        pos.innerHTML = oneNumber.sort(sortPlayers)[i][1];\n        num.innerHTML = oneNumber.sort(sortPlayers)[i][2];\n      }\n    }\n  }\n\n  /****************\n   *** COMPONANT ***\n   ****************/\n\n  function hide() {\n    let x = document.getElementById(\"skaterButton\");\n    x.style.display = \"none\";\n  }\n\n  function clickHandler() {\n    hide();\n    addSkaterStats();\n    allSkaterSpread();\n    displayRankings();\n  }\n  return (\n    <div className=\"skaters\">\n      <div className=\"grid-container\">\n        <h1 className=\"main-title\">Skaters</h1>\n        <button\n          id=\"skaterButton\"\n          className=\"statButton\"\n          type=\"submit\"\n          onClick={clickHandler}\n        >\n          Get Draft Rankings\n        </button>\n        <table id=\"statTable\"></table>\n      </div>\n    </div>\n  );\n}\n\nexport default Skaters;\n"]},"metadata":{},"sourceType":"module"}